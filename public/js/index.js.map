{
  "version": 3,
  "sources": ["../../src/modules/webgl/WebGLUtils.js", "../../src/index.js"],
  "sourcesContent": ["export default class WebGLUtils {\n  constructor(canvas) {\n    this.canvas = null;\n    this.gl = null;\n\n    this.clock = {\n      oldTime: 0,\n      isRunning: false\n    };\n\n    this.init(canvas);\n  }\n\n  /**\n   * \u30B7\u30A7\u30FC\u30C0\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3092\u751F\u6210\u3057\u3066\u8FD4\u3059\u3002\n   * @param {string} source - \u30BD\u30FC\u30B9\u30B3\u30FC\u30C9\n   * @param {'vertex'|'fragment'} type - gl.VERTEX_SHADER or gl.FRAGMENT_SHADER\n   * @return {WebGLShader} \u30B7\u30A7\u30FC\u30C0\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\n   */\n  createShader(source, type) {\n    if (!this.gl) throw new Error('webgl not initialized');\n    if (type !== 'vertex' && type !== 'fragment')\n      throw new Error('invalid shader type');\n\n    const gl = this.gl;\n    const shaderType =\n      type === 'vertex' ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n    const shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      return shader;\n    } else {\n      alert(gl.getShaderInfoLog(shader));\n      return null;\n    }\n  }\n\n  /**\n   * \u30D7\u30ED\u30B0\u30E9\u30E0\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3092\u751F\u6210\u3057\u3066\u8FD4\u3059\u3002\n   * @param {WebGLShader} vs - \u9802\u70B9\u30B7\u30A7\u30FC\u30C0\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\n   * @param {WebGLShader} fs - \u30D5\u30E9\u30B0\u30E1\u30F3\u30C8\u30B7\u30A7\u30FC\u30C0\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\n   * @return {WebGLProgram} \u30D7\u30ED\u30B0\u30E9\u30E0\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\n   */\n  createProgram(vs, fs) {\n    if (!this.gl) throw new Error('webgl not initialized');\n\n    const gl = this.gl;\n    const program = gl.createProgram();\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.linkProgram(program);\n    if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      gl.useProgram(program);\n      return program;\n    } else {\n      alert(gl.getProgramInfoLog(program));\n      return null;\n    }\n  }\n\n  /**\n   * VBO \u3092\u751F\u6210\u3057\u3066\u8FD4\u3059\u3002\n   * @param {Float32Array | Int16Array} data - \u9802\u70B9\u5C5E\u6027\u30C7\u30FC\u30BF\u3092\u683C\u7D0D\u3057\u305F\u914D\u5217\n   * @param {number} usage - vbo\u306E\u30C7\u30FC\u30BF\u30B9\u30C8\u30A2\u7528\u9014\u3092\u6307\u5B9A. gl_STATIC_DRAW or gl.DYNAMIC_DRAW or gl.STREAM_DRAW\n   * @return {WebGLBuffer} VBO\n   */\n  createVbo(data, usage) {\n    if (!this.gl) throw new Error('webgl not initialized');\n    const gl = this.gl;\n    const type = usage || gl.STATIC_DRAW;\n    const vbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, data, type);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    return vbo;\n  }\n\n  /**\n   * IBO \u3092\u751F\u6210\u3057\u3066\u8FD4\u3059\u3002\n   * @param {Array} data - \u30A4\u30F3\u30C7\u30C3\u30AF\u30B9\u30C7\u30FC\u30BF\u3092\u683C\u7D0D\u3057\u305F\u914D\u5217\n   * @return {WebGLBuffer} IBO\n   */\n  createIbo(data) {\n    if (!this.gl) throw new Error('webgl not initialized');\n\n    const gl = this.gl;\n    const ibo = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n    gl.bufferData(\n      gl.ELEMENT_ARRAY_BUFFER,\n      new Int16Array(data),\n      gl.STATIC_DRAW\n    );\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return ibo;\n  }\n\n  /**\n   * VBO \u3092 IBO \u3092\u30D0\u30A4\u30F3\u30C9\u3057\u6709\u52B9\u5316\u3059\u308B\u3002\n   * @param {Array} vbo - VBO \u3092\u683C\u7D0D\u3057\u305F\u914D\u5217\n   * @param {Array} attL - attribute location \u3092\u683C\u7D0D\u3057\u305F\u914D\u5217\n   * @param {Array} attS - attribute stride \u3092\u683C\u7D0D\u3057\u305F\u914D\u5217\n   * @param {WebGLBuffer} ibo - IBO\n   */\n  setAttribute(vbo, attL, attS, ibo) {\n    if (!this.gl) throw new Error('webgl not initialized');\n\n    const gl = this.gl;\n    vbo.forEach((v, index) => {\n      gl.bindBuffer(gl.ARRAY_BUFFER, v);\n      gl.enableVertexAttribArray(attL[index]);\n      gl.vertexAttribPointer(attL[index], attS[index], gl.FLOAT, false, 0, 0);\n    });\n    if (ibo) gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibo);\n  }\n\n  /**\n   * uniform \u5909\u6570\u3092\u307E\u3068\u3081\u3066\u30B7\u30A7\u30FC\u30C0\u306B\u9001\u308B\u3002\n   * @param {Array} value - \u5404\u5909\u6570\u306E\u5024\n   * @param {Array} uniL - uniform location \u3092\u683C\u7D0D\u3057\u305F\u914D\u5217\n   * @param {Array} uniT - uniform \u5909\u6570\u306E\u30BF\u30A4\u30D7\u3092\u683C\u7D0D\u3057\u305F\u914D\u5217\n   */\n  setUniform(value, uniL, uniT) {\n    if (!this.gl) throw new Error('webgl not initialized');\n\n    const gl = this.gl;\n    value.forEach((v, index) => {\n      const type = uniT[index];\n      if (type.includes('Matrix') === true) {\n        gl[type](uniL[index], false, v);\n      } else {\n        gl[type](uniL[index], v);\n      }\n    });\n  }\n\n  getDeltaTime() {\n    const clock = this.clock;\n\n    if (!clock.isRunning) {\n      clock.isRunning = true;\n      clock.oldTime = performance.now();\n      return 0;\n    }\n\n    const newTime = performance.now();\n    const deltaTime = (newTime - clock.oldTime) / 1000;\n    clock.oldTime = newTime;\n\n    return deltaTime;\n  }\n\n  /**\n   * \u521D\u671F\u5316: canvas\u8981\u7D20\u304B\u3089webgl\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u3092\u53D6\u5F97\u3059\u308B\n   * @param {HTMLCanvasElement|string} canvas WebGL\u3092\u4F7F\u7528\u3059\u308B\u30AD\u30E3\u30F3\u30D0\u30B9\u8981\u7D20\u3082\u3057\u304F\u306F\u305D\u306E\u30BB\u30EC\u30AF\u30BF\u30FC\n   */\n  init(canvas) {\n    if (canvas instanceof HTMLCanvasElement) {\n      this.canvas = canvas;\n    } else if (Object.prototype.toString.call(canvas) === '[object String]') {\n      const canvasElement = document.querySelector(canvas);\n      if (canvasElement instanceof HTMLCanvasElement)\n        this.canvas = canvasElement;\n    }\n\n    if (!this.canvas) throw new Error('invalid argument');\n\n    this.gl = this.canvas.getContext('webgl');\n    if (!this.gl) throw new Error('webgl not supported');\n  }\n}\n", "import WebGLUtils from './modules/webgl/WebGLUtils';\nimport vertexShaderSource from './modules/webgl/shaders/vertex.vert';\nimport fragmentShaderSource from './modules/webgl/shaders/fragment.frag';\n\nclass Index {\n  constructor() {\n    this.webGLUtils = new WebGLUtils('.canvas');\n    this.canvas = this.webGLUtils.canvas;\n    this.gl = this.webGLUtils.gl;\n    this.program = null;\n\n    this.time = 0;\n\n    this.positions = [];\n    this.vbo = [];\n    this.attLocation = [];\n    this.attStride = [];\n    this.uniLocation = [];\n    this.uniType = [];\n\n    this.init();\n  }\n\n  createProgram() {\n    const utils = this.webGLUtils;\n    const vertexShader = utils.createShader(vertexShaderSource, 'vertex');\n    const fragmentShader = utils.createShader(fragmentShaderSource, 'fragment');\n    const program = utils.createProgram(vertexShader, fragmentShader);\n    return program;\n  }\n\n  setAttributes() {\n    const gl = this.gl;\n    const utils = this.webGLUtils;\n    this.positions.push(\n      [0.0, 0.0, 0.0],\n      [-0.5, 0.5, 0.0],\n      [0.5, 0.5, 0.0],\n      [-0.5, -0.5, 0.0],\n      [0.5, -0.5, 0.0]\n    );\n    this.vbo = [utils.createVbo(new Float32Array(this.positions.flat()))];\n    this.attLocation = [gl.getAttribLocation(this.program, 'position')];\n    this.attStride = [this.positions[0].length];\n  }\n\n  setUniforms() {\n    const gl = this.gl;\n    this.uniLocation = [gl.getUniformLocation(this.program, 'time')];\n    this.uniType = ['uniform1f'];\n  }\n\n  setData() {\n    this.setAttributes();\n    this.setUniforms();\n  }\n\n  setCanvasSize() {\n    const gl = this.gl;\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n    gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  setup() {\n    const gl = this.gl;\n    gl.clearColor(0.1, 0.1, 0.1, 1.0);\n    this.setCanvasSize();\n\n    this.program = this.createProgram();\n    if (!this.program) throw new Error('program object is not found');\n    this.setData();\n  }\n\n  resize() {\n    this.setCanvasSize();\n  }\n\n  bind() {\n    window.addEventListener('resize', this.resize.bind(this));\n  }\n\n  render() {\n    const gl = this.gl;\n    const utils = this.webGLUtils;\n    const deltaTime = utils.getDeltaTime();\n    this.time += deltaTime;\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.useProgram(this.program);\n    utils.setAttribute(this.vbo, this.attLocation, this.attStride);\n    utils.setUniform([this.time], this.uniLocation, this.uniType);\n    gl.drawArrays(gl.POINTS, 0, this.positions.length);\n  }\n\n  animate() {\n    this.render();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  init() {\n    this.setup();\n    this.bind();\n    this.animate();\n  }\n}\n\nnew Index();\n"],
  "mappings": "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",
  "names": []
}
